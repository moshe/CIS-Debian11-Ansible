---
# 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
# The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems.
# A cramfs image can be used without having to first decompress the image.
- name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
  block:
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "install cramfs /bin/true"
        create: true
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled - blacklist
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "blacklist cramfs"
        create: true
    - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled - modprobe
      modprobe:
        name: cramfs
        state: absent
      when: ansible_connection != 'chroot'
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.1
    - filesystems
    - cramfs
    - modprobe
    - scored
  when: debian11cis_rules_1_1_1_1

# 1.1.1.2 Ensure mounting of squashfs filesystems is disabled
# The squashfs filesystem type is a compressed read-only Linux filesystem embedded in
# small footprint systems (similar to cramfs ). A squashfs image can be used without having
# to first decompress the image.
- name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled
  block:
    - name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "blacklist squashfs"
        create: true
    - name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled - blacklist
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "install squashfs /bin/true"
        create: true
    - name: 1.1.1.2 Ensure mounting of squashfs filesystems is disabled - modprobe
      modprobe:
        name: squashfs
        state: absent
      when: ansible_connection != 'chroot'
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.2
    - filesystems
    - squashfs
    - modprobe
    - scored
  when: debian11cis_rules_1_1_1_2

# 1.1.1.3 Ensure mounting of udf filesystems is disabled
# The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and
# ECMA-167 specifications. This is an open vendor filesystem type for data storage on a
# broad range of media. This filesystem type is necessary to support writing DVDs and newer
# optical disc formats.
- name: 1.1.1.3 Ensure mounting of udf filesystems is disabled
  block:
    - name: 1.1.1.3 Ensure mounting of udf filesystems is disabled
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "install udf /bin/true"
        create: true
    - name: 1.1.1.3 Ensure mounting of udf filesystems is disabled - blacklist
      lineinfile:
        path: /etc/modprobe.d/CIS.conf
        line: "blacklist udf"
        create: true
    - name: 1.1.1.3 Ensure mounting of udf filesystems is disabled - modprobe
      modprobe:
        name: udf
        state: absent
      when: ansible_connection != 'chroot'
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.1.3
    - filesystems
    - udf
    - modprobe
    - scored
  when: debian11cis_rules_1_1_1_3

# 1.1.8.1 Ensure nodev option set on /dev/shm partition
# The nodev mount option specifies that the filesystem cannot contain special devices.
# Since the user partitions are not intended to support devices, set this option to ensure that
# users cannot attempt to create block or character special devices.
- include: all_mounts_facts.yaml
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.1
    - scored
  when: debian11cis_rules_1_1_8_1

- name: 1.1.8.1 Ensure nodev option set on /dev/shm partition
  mount:
    name: "{{ item.mount }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    src: "{{ item.device }}"
    opts: "{{ item.options.split(',') | union(['nodev']) | join(',') }}"
  with_items: "{{ all_mounts.stdout | default('{}') | from_json | byattr('mount', '/dev/shm') | list }}"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.1
    - scored

# 1.1.8.2 Ensure noexec option set on /dev/shm partition
# The noexec mount option specifies that the filesystem cannot contain executable binaries.
# Setting this option on a file system prevents users from executing programs from shared
# memory. This deters users from introducing potentially malicious software on the system.
- include: all_mounts_facts.yaml
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.2
    - scored
  when: debian11cis_rules_1_1_8_2
- name: 1.1.8.2 Ensure noexec option set on /dev/shm partition
  mount:
    name: "{{ item.mount }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    src: "{{ item.device }}"
    opts: "{{ item.options.split(',') | union(['noexec']) | join(',') }}"
  with_items: "{{ all_mounts.stdout | default('{}') | from_json | byattr('mount', '/dev/shm') | list }}"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.2
    - scored
  when: debian11cis_rules_1_1_8_2

# 1.1.8.3 Ensure nosuid option set on /dev/shm partition
# The nosuid mount option specifies that the filesystem cannot contain setuid files.
# Setting this option on a file system prevents users from introducing privileged programs
# onto the system and allowing non-root users to execute them.
- include: all_mounts_facts.yaml
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.3
    - scored
  when: debian11cis_rules_1_1_8_3
- name: 1.1.8.3 Ensure nosuid option set on /dev/shm partition
  mount:
    name: "{{ item.mount }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    src: "{{ item.device }}"
    opts: "{{ item.options.split(',') | union(['nosuid']) | join(',') }}"
  with_items: "{{ all_mounts.stdout | default('{}') | from_json | byattr('mount', '/dev/shm') | list }}"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.1.8.3
    - 1.1.8.2
    - scored
  when: debian11cis_rules_1_1_8_3

# 1.1.9 Disable Automounting
# autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.
# Note: This control should align with the tolerance of the use of portable drives and optical
# media in the organization. On a server requiring an admin to manually mount media can be
# part of defense-in-depth to reduce the risk of unapproved software or information being
# introduced or proprietary software or information being exfiltrated. If admins commonly use
# flash drives and Server access has sufficient physical controls, requiring manual mounting
# may not increase security.
- name: 1.1.9 Disable Automounting
  apt:
    name: autofs
    state: absent
  tags:
    - section1
    - level_1_server
    - level_2_workstation
    - 1.1.9
    - autofs
    - scored
  when: debian11cis_rules_1_1_9

# 1.1.10 Disable USB Storage
# USB storage provides a means to transfer and store files insuring persistence and
# availability of the files independent of network connection status. Its popularity and utility
# has led to USB-based malware being a simple and common means for network infiltration
# and a first step to establishing a persistent threat within a networked environment.
# Note: An alternative solution to disabling the usb-storage module may be found in USBGuard.
# Use of USBGuard and construction of USB device policies should be done in alignment with
# site policy.
- name: 1.1.10 Disable USB Storage
  block:
    - name: 1.1.10 Disable USB Storage (CIS.conf)
      lineinfile:
        dest: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install usb-storage(\\s|$)"
        line: "install usb-storage /bin/true"
        state: present
        create: true
    - name: 1.1.10 Disable USB Storage (modprobe)
      modprobe:
        name: usb-storage
        state: absent
  tags:
    - section1
    - level_1_server
    - level_2_workstation
    - 1.1.10
    - usb_storage
    - modprobe
    - scored
  when: debian11cis_rules_1_1_10

# 1.2 Configure Software Updates
# For the purpose of this benchmark, the requirement is to ensure that a patch management
# system is configured and maintained. The specifics on patch update procedures are left to
# the organization.
# 1.2.1 Ensure package manager repositories are configured
# Systems need to have package manager repositories configured to ensure they receive the
# latest patches and updates.
- name: 1.2.1 Ensure package manager repositories are configured
  debug:
    msg: |
      Run the following command and verify package repositories are configured correctly
      > apt-cache policy
      Remediation:
      Configure your package manager repositories according to site policy
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.2.1
    - manual_setup
    - not-scored
  when: debian11cis_rules_1_2_1

# 1.2.2 Ensure GPG keys are configured
# Most packages managers implement GPG key signing to verify package integrity during installation.
# It is important to ensure that updates are obtained from a valid source to protect against
# spoofing that could lead to the inadvertent installation of malware on the system
- name: 1.2.2 Ensure GPG keys are configured
  debug:
    msg: |
      Audit:
      Verify GPG keys are configured correctly for your package manager:
      > apt-key list
      Remediation:
      Update your package manager GPG keys in accordance with site policy.
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.2.2
    - manual_setup
    - not-scored
  when: debian11cis_rules_1_2_2

# 1.3 Filesystem Integrity Checking
# AIDE is a file integrity checking tool, similar in nature to Tripwire. While it cannot prevent
# intrusions, it can detect unauthorized changes to configuration files by alerting when the
# files are changed. When setting up AIDE, decide internally what the site policy will be
# concerning integrity checking. Review the AIDE quick start guide and AIDE documentation
# before proceeding.
# 1.3.1 Ensure AIDE is installed
# AIDE takes a snapshot of filesystem state including modification times, permissions, and
# file hashes which can then be used to compare against the current state of the filesystem to
# detect modifications to the system.
# Note: The prelinking feature can interfere with AIDE because it alters binaries to speed up
# their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus
# avoiding false positives from AIDE.
- name: 1.3.1 Ensure AIDE is installed
  block:
    - name: 1.3.1 Ensure AIDE is installed
      apt:
        name: ["nullmailer", "aide-common", "aide"]
        state: present
        install_recommends: false
    - name: 1.3.1 Configure AIDE as appropriate for your environment - aideinit
      command: aideinit
    - name: 1.3.1 Configure AIDE as appropriate for your environment - aideinit db
      shell: |
        mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.3.1
    - scored
  when: debian11cis_rules_1_3_1

# 1.3.2 Ensure filesystem integrity is regularly checked
# Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.
# Notes:
# The checking in this recommendation occurs every day at 5am. Alter the frequency and
# time of the checks in compliance with site policy
# systemd timers, timer file aidecheck.timer and service file aidecheck.service , have
# been included as an optional alternative to using cron
# Ubuntu advises using /usr/bin/aide.wrapper rather than calling /usr/bin/aide
# directly in order to protect the database and prevent conflicts
- name: 1.3.2 Ensure filesystem integrity is regularly checked - Cron
  cron:
    name: Run AIDE integrity check weekly
    user: root
    minute: "0"
    hour: "5"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.3.2
    - scored
  when: debian11cis_rules_1_3_2

# 1.4 Secure Boot Settings
# The recommendations in this section focus on securing the bootloader and settings
# involved in the boot process directly.
# 1.4.1 Ensure bootloader password is set
# Setting the boot loader password will require that anyone rebooting the system must enter
# a password before being able to set command line boot parameters
# Note: This recommendation is designed around the grub bootloader, if LILO or another
# bootloader is in use in your environment enact equivalent settings. Replace
# /boot/grub/grub.cfg with the appropriate grub configuration file for your environment.
- name: 1.4.1 Ensure bootloader password is set - MANUAL
  debug:
    msg: |
      Create an encrypted password with grub-mkpasswd-pbkdf2 :
      # grub-mkpasswd-pbkdf2
      Enter password: <password>
      Reenter password: <password>
      PBKDF2 hash of your password is <encrypted-password>
      Add the following into a custom /etc/grub.d configuration file:
      cat <<EOF
      set superusers="<username>"
      password_pbkdf2 <username> <encrypted-password>
      EOF
      More info: https://help.ubuntu.com/community/Grub2/Passwords
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.4.1
    - manual_setup
    - scored
  when: debian11cis_rules_1_4_1

# 1.4.2 Ensure permissions on bootloader config are configured
# The grub configuration file contains information on boot settings and passwords for
# unlocking boot options. The grub configuration is usually grub.cfg stored in /boot/grub/ .
# Note: This recommendation is designed around the grub bootloader, if LILO or another
# bootloader is in use in your environment enact equivalent settings. Replace
# /boot/grub/grub.cfg with the appropriate grub configuration file for your environment
- name: 1.4.2 Ensure permissions on bootloader config are configured
  file:
    path: "/boot/grub/grub.cfg"
    owner: root
    group: root
    mode: "og-rwx"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.4.2
    - scored
  when: debian11cis_rules_1_4_2

# 1.4.3 Ensure authentication required for single user mode
# Single user mode is used for recovery when the system detects an issue during boot or by
# manual selection from the bootloader.
- name: 1.4.3 Ensure authentication required for single user mode
  shell: grep "^root:[*\!]:" /etc/shadow
  register: output_1_4_3
  changed_when: false
  failed_when: false
  check_mode: no
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.4.3
    - scored
  when: debian11cis_rules_1_4_3

# 1.5 Additional Process Hardening
# 1.5.1 Ensure address space layout randomization (ASLR) is enabled
# Address space layout randomization (ASLR) is an exploit mitigation technique which
# randomly arranges the address space of key data areas of a process.
- name: 1.5.1 Ensure address space layout randomization (ASLR) is enabled
  sysctl:
    name: kernel.randomize_va_space
    value: "2"
    sysctl_file: /etc/sysctl.d/CIS-sysctl.conf
    state: present
    reload: true
    sysctl_set: true
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.5.1
    - scored
  when: debian11cis_rules_1_5_1

# 1.5.2 Ensure prelink is disabled
- name: 1.5.2 Ensure prelink is disabled
  apt:
    name: prelink
    state: absent
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.5.2
    - scored
  when: debian11cis_rules_1_5_2

# TODO(moshe) Implement this
#- name: 1.5.3 Ensure Automatic Error Reporting is not enabled

# 1.5.4 Ensure core dumps are restricted
# A core dump is the memory of an executable program. It is generally used to determine
# why a program aborted. It can also be used to glean confidential information from a core
# file. The system provides the ability to set a soft limit for core dumps, but this can be
# overridden by the user.
- name: 1.5.4 Ensure core dumps are restricted
  block:
    - name: 1.5.4 Ensure core dumps are restricted - sysctl
      sysctl:
        name: fs.suid_dumpable
        value: "0"
        sysctl_file: /etc/sysctl.d/CIS-sysctl.conf
        state: present
        reload: true
        sysctl_set: true
    - name: 1.5.4 Ensure core dumps are restricted - limits
      lineinfile:
        dest: /etc/security/limits.d/CIS-limits.conf
        line: "*                hard    core            0"
        regexp: '(^#)?\*\s+hard\s+core\s+[0-9]+'
        state: present
        create: true
    - name: 1.5.4 Ensure core dumps are restricted - apt
      apt:
        name: systemd-coredump
        state: present
    - name: 1.5.4 Ensure core dumps are restricted - reload
      systemd:
        daemon_reload: yes
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.5.4
    - scored
  when: debian11cis_rules_1_5_4

# 1.6 Mandatory Access Control
# Mandatory Access Control (MAC) provides an additional layer of access restrictions to
# processes on top of the base Discretionary Access Controls. By restricting how processes
# can access files and resources on a system the potential impact from vulnerabilities in the
# processes can be reduced.
# Impact: Mandatory Access Control limits the capabilities of applications and daemons on a
# system, while this can prevent unauthorized access the configuration of MAC can be complex
# and difficult to implement correctly preventing legitimate access from occurring.
# 1.6.1 Configure AppArmor
# 1.6.1.1 Ensure AppArmor is installed
# AppArmor provides Mandatory Access Controls.
- name: 1.6.1.1 Ensure AppArmor is installed
  apt:
    name: ["apparmor", "apparmor-utils"]
    state: present
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.6.1.1
    - scored
  when: debian11cis_rules_1_6_1_1

# 1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration
# Configure AppArmor to be enabled at boot time and verify that it has not been overwritten
# by the bootloader boot parameters.
# Note: This recommendation is designed around the grub bootloader, if LILO or another
# bootloader is in use in your environment enact equivalent settings.
- name: 1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration
  block:
    - name: 1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration
      replace:
        dest: /etc/default/grub
        regexp: '^(GRUB_CMDLINE_LINUX=(?!.*apparmor)\"[^\"]*)(\".*)'
        replace: '\1 apparmor=1 security=apparmor\2'
      register: output_1_6_1_2
    - name: 1.6.1.2 Ensure AppArmor is enabled in the bootloader configuration | reload
      shell: |
        update-grub
      when: output_1_6_1_2
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.6.1.2
    - scored
  when: debian11cis_rules_1_6_1_2

# 1.6.1.3 Ensure all AppArmor Profiles are in enforce or complain mode
# AppArmor profiles define what resources applications are able to access.
- name: 1.6.1.3 Ensure all AppArmor Profiles are in enforce or complain mode,
    1.6.1.4 Ensure all AppArmor Profiles are enforcing
  shell: |
    find /etc/apparmor.d -maxdepth 1 -type f | while read file
    do
      if grep --quiet "flags\s*=.*complain" "$file"; then
        aa-enforce "$file"
      fi
    done
  tags:
    - section1
    - level_2_server
    - level_2_workstation
    - 1.6.1.3
    - 1.6.1.4
    - scored
  when: debian11cis_rules_1_6_1_3 or 
        debian11cis_rules_1_6_1_4

# 1.7 Warning Banners
# Presenting a warning message prior to the normal user login may assist in the
# prosecution of trespassers on the computer system. Changing some of these login
# banners also has the side effect of hiding OS version information and other detailed
# system information from attackers attempting to target specific exploits at a system.
# The /etc/motd, /etc/issue, and /etc/issue.net files govern warning banners for standard
# command line logins for both local and remote users.
# Guidelines published by the US Department of Defense require that warning messages
# include at least the name of the organization that owns the system, the fact that the
# system is subject to monitoring and that such monitoring is in compliance with local
# statutes, and that use of the system implies consent to such monitoring. It is important
# that the organization's legal counsel review the content of all messages before any
# system modifications are made, as these warning messages are inherently site-specific.
# More information (including citations of relevant case law) can be found at
# http://www.justice.gov/criminal/cybercrime/
# 1.7.1 Ensure message of the day is configured properly (Automated)
# The contents of the /etc/motd file are displayed to users after login and function as a
# message of the day for authenticated users.
# Unix-based systems have typically displayed information about the OS release and
# patch level upon logging in to the system. This information can be useful to developers
# who are developing software for a particular OS platform. If mingetty(8) supports the
# following options, they display operating system information: \m - machine architecture
# \r - operating system release \s - operating system name \v - operating system version
- name: 1.7.1 Ensure message of the day is configured properly
  debug:
    msg: "Ensure that system information is not exposed via motd (\\v|\\s|\\r|\\m)"
  when: debian11cis_rules_1_7_1

# 1.7.2 Ensure local login warning banner is configured properly
- name: 1.7.2 Ensure local login warning banner is configured properly
  template:
    src: issue.j2
    dest: /etc/issue
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.7.2
    - scored
  when: debian11cis_rules_1_7_2

# 1.7.3 Ensure remote login warning banner is configured properly
- name: 1.7.3 Ensure remote login warning banner is configured properly
  template:
    src: issue.net.j2
    dest: /etc/issue.net
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.7.3
    - scored
  when: debian11cis_rules_1_7_3

#TODO(moshe) - Add 1.7.4

# 1.7.5 Ensure permissions on /etc/issue are configured
- name: 1.7.5 Ensure permissions on /etc/issue are configured
  file:
    path: /etc/issue
    owner: root
    group: root
    mode: '0644'
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.7.5
    - scored
  when: debian11cis_rules_1_7_5

# 1.7.6 Ensure permissions on /etc/issue.net are configured
- name: 1.7.6 Ensure permissions on /etc/issue.net are configured
  file:
    path: /etc/issue.net
    owner: root
    group: root
    mode: "0644"
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.7.6
    - scored
  when: debian11cis_rules_1_7_6

# 1.8 GNOME Display Manager
# The GNOME Display Manager (GDM) is a program that manages graphical display
# servers and handles graphical user logins.
# 1.8.1 Ensure GNOME Display Manager is removed
- name: 1.8.1 Ensure GNOME Display Manager is removed
  apt:
    name: gdm3
    state: absent
  tags:
    - section1
    - level_1_server
    - level_1_workstation
    - 1.8.1
    - manual_setup
    - scored
  when: debian11cis_rules_1_8_1
